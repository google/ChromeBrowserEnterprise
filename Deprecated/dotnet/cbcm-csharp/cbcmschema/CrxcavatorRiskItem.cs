// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using cbcmSchema.Crxcavator;
//
//    var crxcavatorRiskItem = CrxcavatorRiskItem.FromJson(jsonString);

namespace cbcmSchema.Crxcavator
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class CrxcavatorRiskItem
    {
        [JsonProperty("data", NullValueHandling = NullValueHandling.Ignore)]
        public Data Data { get; set; }

        [JsonProperty("extension_id", NullValueHandling = NullValueHandling.Ignore)]
        public string ExtensionId { get; set; }

        [JsonProperty("version", NullValueHandling = NullValueHandling.Ignore)]
        public string Version { get; set; }

        [JsonIgnore]
        [JsonProperty("platform", NullValueHandling = NullValueHandling.Ignore)]
        public string Platform { get; set; }

        public Uri RiskReport
        {
            get
            {
                return new Uri(String.Format("https://crxcavator.io/report/{0}/{1}", this.ExtensionId, this.Version));
            }
        }

        public override string ToString()
        {
            return String.Format("crx:{0}", this.Data.Risk.Total.HasValue ? this.Data.Risk.Total.Value.ToString() : String.Empty);
        }
    }

    public partial class Data
    {
        [JsonIgnore]
        [JsonProperty("csp", NullValueHandling = NullValueHandling.Ignore)]
        public Csp Csp { get; set; }
        [JsonIgnore]
        [JsonProperty("dangerousfunctions", NullValueHandling = NullValueHandling.Ignore)]
        public Dangerousfunctions Dangerousfunctions { get; set; }
        [JsonIgnore]
        [JsonProperty("entrypoints", NullValueHandling = NullValueHandling.Ignore)]
        public Entrypoints Entrypoints { get; set; }
        [JsonIgnore]
        [JsonProperty("extcalls", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Extcalls { get; set; }
        [JsonIgnore]
        [JsonProperty("manifest", NullValueHandling = NullValueHandling.Ignore)]
        public Manifest Manifest { get; set; }
        [JsonIgnore]
        [JsonProperty("related", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, Related> Related { get; set; }

        [JsonProperty("risk", NullValueHandling = NullValueHandling.Ignore)]
        public Risk Risk { get; set; }
        [JsonIgnore]
        [JsonProperty("webstore", NullValueHandling = NullValueHandling.Ignore)]
        public DataWebstore Webstore { get; set; }
    }

    public partial class Csp
    {
        [JsonIgnore]
        [JsonProperty("object-src", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ObjectSrc { get; set; }
        [JsonIgnore]
        [JsonProperty("script-src", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ScriptSrc { get; set; }
    }

    public partial class Dangerousfunctions
    {
        [JsonIgnore]
        [JsonProperty(".after(", NullValueHandling = NullValueHandling.Ignore)]
        public After After { get; set; }
        [JsonIgnore]
        [JsonProperty(".append(", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, List<long>> Append { get; set; }
        [JsonIgnore]
        [JsonProperty(".insertBefore(", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, List<long>> InsertBefore { get; set; }
        [JsonIgnore]
        [JsonProperty(".prepend(", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, List<long>> Prepend { get; set; }
        [JsonIgnore]
        [JsonProperty(".wrap(", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, List<long>> Wrap { get; set; }
    }

    public partial class After
    {
        [JsonIgnore]
        [JsonProperty("/tmp/ljflmlehinmoeknoonhibbjpldiijjmm_7.9.0/content/chunk-F7CYCDLM.js", NullValueHandling = NullValueHandling.Ignore)]
        public List<long> TmpLjflmlehinmoeknoonhibbjpldiijjmm790ContentChunkF7CycdlmJs { get; set; }
    }

    public partial class Entrypoints
    {
        [JsonIgnore]
        [JsonProperty("window.addEventListener", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, List<long>> WindowAddEventListener { get; set; }
    }

    public partial class Manifest
    {
        [JsonIgnore]
        [JsonProperty("Author", NullValueHandling = NullValueHandling.Ignore)]
        public string Author { get; set; }

        [JsonIgnore]
        [JsonProperty("background", NullValueHandling = NullValueHandling.Ignore)]
        public Background Background { get; set; }
        [JsonIgnore]
        [JsonProperty("browser_action", NullValueHandling = NullValueHandling.Ignore)]
        public BrowserAction BrowserAction { get; set; }
        [JsonIgnore]
        [JsonProperty("commands", NullValueHandling = NullValueHandling.Ignore)]
        public Commands Commands { get; set; }
        [JsonIgnore]
        [JsonProperty("content_scripts", NullValueHandling = NullValueHandling.Ignore)]
        public List<ContentScript> ContentScripts { get; set; }
        [JsonIgnore]
        [JsonProperty("content_security_policy", NullValueHandling = NullValueHandling.Ignore)]
        public string ContentSecurityPolicy { get; set; }
        [JsonIgnore]
        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }
        [JsonIgnore]
        [JsonProperty("externally_connectable", NullValueHandling = NullValueHandling.Ignore)]
        public ExternallyConnectable ExternallyConnectable { get; set; }
        [JsonIgnore]
        [JsonProperty("icons", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, string> Icons { get; set; }
        [JsonIgnore]
        [JsonProperty("manifest_version", NullValueHandling = NullValueHandling.Ignore)]
        public long? ManifestVersion { get; set; }
        [JsonIgnore]
        [JsonProperty("minimum_chrome_version", NullValueHandling = NullValueHandling.Ignore)]
        public string MinimumChromeVersion { get; set; }
        [JsonIgnore]
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }
        [JsonIgnore]
        [JsonProperty("permissions", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Permissions { get; set; }
        [JsonIgnore]
        [JsonProperty("update_url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri UpdateUrl { get; set; }
        [JsonIgnore]
        [JsonProperty("version", NullValueHandling = NullValueHandling.Ignore)]
        public string Version { get; set; }

        [JsonIgnore]
        [JsonProperty("web_accessible_resources", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> WebAccessibleResources { get; set; }
    }
    public partial class Author
    {
        [JsonIgnore]
        [JsonProperty("email", NullValueHandling = NullValueHandling.Ignore)]
        public string Email { get; set; }
    }

    public partial class Background
    {
        [JsonProperty("page", NullValueHandling = NullValueHandling.Ignore)]
        public string Page { get; set; }

        [JsonProperty("persistent", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Persistent { get; set; }
    }

    public partial class BrowserAction
    {
    }

    public partial class Commands
    {
        [JsonProperty("play-pause", NullValueHandling = NullValueHandling.Ignore)]
        public PlayPause PlayPause { get; set; }

        [JsonProperty("save-to-library", NullValueHandling = NullValueHandling.Ignore)]
        public PlayPause SaveToLibrary { get; set; }
    }

    public partial class PlayPause
    {
        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("suggested_key", NullValueHandling = NullValueHandling.Ignore)]
        public SuggestedKey SuggestedKey { get; set; }
    }

    public partial class SuggestedKey
    {
        [JsonProperty("chromeos", NullValueHandling = NullValueHandling.Ignore)]
        public string Chromeos { get; set; }

        [JsonProperty("linux", NullValueHandling = NullValueHandling.Ignore)]
        public string Linux { get; set; }

        [JsonProperty("mac", NullValueHandling = NullValueHandling.Ignore)]
        public string Mac { get; set; }

        [JsonProperty("windows", NullValueHandling = NullValueHandling.Ignore)]
        public string Windows { get; set; }
    }

    public partial class ContentScript
    {
        [JsonProperty("js", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Js { get; set; }

        [JsonProperty("matches", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Matches { get; set; }

        [JsonProperty("run_at", NullValueHandling = NullValueHandling.Ignore)]
        public string RunAt { get; set; }

        [JsonProperty("css", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Css { get; set; }

        [JsonProperty("all_frames", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AllFrames { get; set; }
    }

    public partial class ExternallyConnectable
    {
        [JsonProperty("matches", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Matches { get; set; }
    }

    public partial class Related
    {
        [JsonProperty("icon", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Icon { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("rating", NullValueHandling = NullValueHandling.Ignore)]
        public double? Rating { get; set; }

        [JsonProperty("rating_users", NullValueHandling = NullValueHandling.Ignore)]
        public long? RatingUsers { get; set; }

        [JsonProperty("short_description", NullValueHandling = NullValueHandling.Ignore)]
        public string ShortDescription { get; set; }

        [JsonProperty("users", NullValueHandling = NullValueHandling.Ignore)]
        public long? Users { get; set; }

        [JsonProperty("platform", NullValueHandling = NullValueHandling.Ignore)]
        public string Platform { get; set; }
    }

    public partial class Risk
    {
        [JsonIgnore]
        [JsonProperty("csp", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, long> Csp { get; set; }

        [JsonIgnore]
        [JsonProperty("permissions", NullValueHandling = NullValueHandling.Ignore)]
        public Permissions Permissions { get; set; }

        [JsonProperty("total", NullValueHandling = NullValueHandling.Ignore)]
        public long? Total { get; set; }

        [JsonIgnore]
        [JsonProperty("webstore", NullValueHandling = NullValueHandling.Ignore)]
        public RiskWebstore Webstore { get; set; }

        [JsonIgnore]
        [JsonProperty("metadata", NullValueHandling = NullValueHandling.Ignore)]
        public BrowserAction Metadata { get; set; }
    }

    public partial class Permissions
    {
        [JsonProperty("total", NullValueHandling = NullValueHandling.Ignore)]
        public long? Total { get; set; }
    }

    public partial class RiskWebstore
    {
        [JsonProperty("last_updated", NullValueHandling = NullValueHandling.Ignore)]
        public long? LastUpdated { get; set; }

        [JsonProperty("support_site", NullValueHandling = NullValueHandling.Ignore)]
        public long? SupportSite { get; set; }

        [JsonProperty("total", NullValueHandling = NullValueHandling.Ignore)]
        public long? Total { get; set; }
    }

    public partial class DataWebstore
    {
        [JsonProperty("address", NullValueHandling = NullValueHandling.Ignore)]
        public string Address { get; set; }

        [JsonProperty("email", NullValueHandling = NullValueHandling.Ignore)]
        public string Email { get; set; }

        [JsonProperty("icon", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Icon { get; set; }

        [JsonProperty("last_updated", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? LastUpdated { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("offered_by", NullValueHandling = NullValueHandling.Ignore)]
        public string OfferedBy { get; set; }

        [JsonProperty("permission_warnings", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> PermissionWarnings { get; set; }

        [JsonProperty("privacy_policy", NullValueHandling = NullValueHandling.Ignore)]
        public Uri PrivacyPolicy { get; set; }

        [JsonProperty("rating", NullValueHandling = NullValueHandling.Ignore)]
        public double? Rating { get; set; }

        [JsonProperty("rating_users", NullValueHandling = NullValueHandling.Ignore)]
        public long? RatingUsers { get; set; }

        [JsonProperty("short_description", NullValueHandling = NullValueHandling.Ignore)]
        public string ShortDescription { get; set; }

        [JsonProperty("size", NullValueHandling = NullValueHandling.Ignore)]
        public string Size { get; set; }

        [JsonProperty("support_site", NullValueHandling = NullValueHandling.Ignore)]
        public string SupportSite { get; set; }

        [JsonProperty("users", NullValueHandling = NullValueHandling.Ignore)]
        public long? Users { get; set; }

        [JsonProperty("version", NullValueHandling = NullValueHandling.Ignore)]
        public string Version { get; set; }

        [JsonProperty("website", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Website { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("price", NullValueHandling = NullValueHandling.Ignore)]
        public string Price { get; set; }
    }

    public partial class CrxcavatorRiskItem
    {
        public static CrxcavatorRiskItem FromJson(string json) => JsonConvert.DeserializeObject<CrxcavatorRiskItem>(json, cbcmSchema.Crxcavator.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this CrxcavatorRiskItem self) => JsonConvert.SerializeObject(self, cbcmSchema.Crxcavator.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
