// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using cbcmSchema.ChromeBrowserPolicyRequest;
//
//    var browserPolicyRequest = BrowserPolicyRequest.FromJson(jsonString);

namespace cbcmSchema.ChromeBrowserPolicyRequest
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class BrowserPolicyRequest
    {
        [JsonProperty("policySchemaFilter", NullValueHandling = NullValueHandling.Ignore)]
        public string PolicySchemaFilter { get; set; }

        [JsonProperty("policyTargetKey", NullValueHandling = NullValueHandling.Ignore)]
        public PolicyTargetKey PolicyTargetKey { get; set; }

        [JsonProperty("pageSize", NullValueHandling = NullValueHandling.Ignore)]
        public int? PageSize { get; set; }

        [JsonProperty("pageToken", NullValueHandling = NullValueHandling.Ignore)]
        public string PageToken { get; set; }
    }

    public partial class PolicyTargetKey
    {
        [JsonProperty("targetResource", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetResource { get; set; }
    }

    public partial class BrowserPolicyRequest
    {
        public static BrowserPolicyRequest FromJson(string json) => JsonConvert.DeserializeObject<BrowserPolicyRequest>(json, cbcmSchema.ChromeBrowserPolicyRequest.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this BrowserPolicyRequest self) => JsonConvert.SerializeObject(self, cbcmSchema.ChromeBrowserPolicyRequest.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
