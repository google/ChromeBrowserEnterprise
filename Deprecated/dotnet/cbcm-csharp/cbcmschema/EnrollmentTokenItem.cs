// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using cbcmSchema.EnrollmentTokenSchema;
//
//    var enrollmentTokenItem = EnrollmentTokenItem.FromJson(jsonString);

namespace cbcmSchema.EnrollmentTokenSchema
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class EnrollmentTokenItem
    {
        [JsonProperty("kind", NullValueHandling = NullValueHandling.Ignore)]
        public string Kind { get; set; }

        [JsonProperty("chromeEnrollmentTokens", NullValueHandling = NullValueHandling.Ignore)]
        public List<ChromeEnrollmentToken> ChromeEnrollmentTokens { get; set; }

        [JsonProperty("nextPageToken", NullValueHandling = NullValueHandling.Ignore)]
        public string NextPageToken { get; set; }
    }

    public partial class ChromeEnrollmentToken
    {
        [JsonProperty("tokenPermanentId", NullValueHandling = NullValueHandling.Ignore)]
        public string TokenPermanentId { get; set; }

        [JsonProperty("kind", NullValueHandling = NullValueHandling.Ignore)]
        public string Kind { get; set; }

        [JsonProperty("token", NullValueHandling = NullValueHandling.Ignore)]
        public string Token { get; set; }

        [JsonProperty("customerId", NullValueHandling = NullValueHandling.Ignore)]
        public string CustomerId { get; set; }

        [JsonProperty("orgUnitPath", NullValueHandling = NullValueHandling.Ignore)]
        public string OrgUnitPath { get; set; }

        [JsonProperty("state", NullValueHandling = NullValueHandling.Ignore)]
        public string State { get; set; }

        [JsonProperty("createTime", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? CreateTime { get; set; }

        [JsonProperty("creatorId", NullValueHandling = NullValueHandling.Ignore)]
        public string CreatorId { get; set; }

        [JsonProperty("tokenType", NullValueHandling = NullValueHandling.Ignore)]
        public string TokenType { get; set; }
    }

    public partial class EnrollmentTokenItem
    {
        public static EnrollmentTokenItem FromJson(string json) => JsonConvert.DeserializeObject<EnrollmentTokenItem>(json, cbcmSchema.EnrollmentTokenSchema.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this EnrollmentTokenItem self) => JsonConvert.SerializeObject(self, cbcmSchema.EnrollmentTokenSchema.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
